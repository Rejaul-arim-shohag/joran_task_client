{"version":3,"file":"static/js/580.ad682d93.chunk.js","mappings":"uNA+DA,UArDA,WACI,IAGIA,EAASC,EAAWC,EAHjBC,GAAYC,EAAAA,EAAAA,MAAZD,WAEP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACqCC,GAAYC,EAAAA,EAAAA,UAC7CC,GAAWC,EAAAA,EAAAA,MAsBf,OALAC,EAAAA,EAAAA,YAAU,YACFC,EAAAA,EAAAA,IAAgBV,GACXW,MAAK,SAAAC,GAAI,OAAIR,EAAWQ,EAAKA,WACvC,CAACZ,IACJa,QAAQC,IAAI,UAAUX,IAElB,SAAC,IAAD,CAAWY,OAAO,EAAMC,UAAU,eAAlC,UACI,SAAC,IAAD,CAAKA,UAAU,gCAAf,UACI,gBAAKA,UAAU,2CAAf,UACI,gBAAKA,UAAU,OAAf,UACI,iBAAKA,UAAU,YAAf,WACI,wCACA,mBACA,kBAAOC,IAAK,SAACC,GAAD,OAAWrB,EAAUqB,GAAOC,aAAY,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAASiB,aAAcC,YAAY,eAAeL,UAAU,iCAAiCM,KAAK,UACxJ,mBACA,kBAAOL,IAAK,SAACC,GAAD,OAAWpB,EAAWoB,GAAOC,aAAY,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAASoB,MAAOF,YAAY,QAAQL,UAAU,iCAAiCM,KAAK,UAE3I,mBACA,kBAAOL,IAAK,SAACC,GAAD,OAAWnB,EAAcmB,GAAOC,aAAY,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAASqB,cAAeH,YAAY,gBAAgBL,UAAU,iCAAiCM,KAAK,UAC9J,mBACA,kBAAOL,IAAK,SAACC,GAAD,OAAWb,EAAYa,GAAOC,aAAY,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAASsB,MAAOJ,YAAY,YAAYL,UAAU,iCAAiCM,KAAK,UAChJ,mBAEA,mBAAQI,QAvCJ,WACxB,IAAMC,EAAc9B,EAAQ+B,MACtBL,EAAQzB,EAAS8B,MACjBC,EAAW9B,EAAY6B,MACvBE,EAAWzB,EAAUuB,OACvBG,EAAAA,EAAAA,IAAQJ,IACRK,EAAAA,EAAAA,IAAW,6BAEXC,EAAAA,EAAAA,IAAcjC,EAAY2B,EAAaJ,EAAOM,EAAUC,GACnDnB,MAAK,SAACuB,IACS,IAARA,GACA3B,EAAS,YA4BiCS,UAAU,4BAAhD,iC,4HCnDtBmB,EAAmBC,EAAAA,YAAiB,WAMvCnB,GAAQ,IALToB,EAKS,EALTA,SACArB,EAIS,EAJTA,UAIS,IAFTsB,GAAIC,OAEK,MAFO,MAEP,EADNC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBL,EAAU,OACjDM,GAAcC,EAAAA,EAAAA,MACdC,EAAa,GAAH,OAAMJ,EAAN,SACVK,EAAU,GAiBhB,OAhBAH,EAAYI,SAAQ,SAAAC,GAClB,IAEIC,EAFEC,EAAYV,EAAMQ,UACjBR,EAAMQ,GAKTC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAGT,IAAMC,EAAqB,OAAbH,EAAA,WAAwBA,GAAa,GACvC,MAARC,GAAcH,EAAQM,KAAR,UAAgBP,GAAhB,OAA6BM,EAA7B,YAAsCF,QAEtCI,EAAAA,EAAAA,KAAKd,GAAD,QAAC,QACvBtB,IAAKA,GACFuB,GAFmB,IAGtBxB,UAAWsC,IAAAA,WAAA,GAAWtC,EAAWyB,GAAtB,OAA4CK,UAG3DX,EAAIoB,YAAc,MAClB","sources":["components/Update/update.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { ErrorToast, IsEmpty } from '../../Helper/FormHelper';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useRef } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { productFindById, updateProduct } from '../../ApiRequest/APIRequest';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nfunction Update() {\r\n    const {product_id}=useParams()\r\n   \r\n    const [product, setProduct] = useState({})\r\n    let nameRef, priceRef,  categoryRef, imgUrlRef = useRef();\r\n    let navigate = useNavigate()\r\n    const handleUpdateProduct = () => {\r\n        const productName = nameRef.value;\r\n        const price = priceRef.value;\r\n        const category = categoryRef.value;\r\n        const imageUrl = imgUrlRef.value;\r\n        if (IsEmpty(productName)) {\r\n            ErrorToast(\"Product Name is required\")\r\n        } else {\r\n            updateProduct(product_id, productName, price, category, imageUrl)\r\n                .then((res) => {\r\n                    if (res === true) {\r\n                        navigate(\"/All\")\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n            productFindById(product_id)\r\n                .then(data => setProduct(data.data))\r\n    }, [product_id])\r\n    console.log('product',product)\r\n    return (\r\n        <Container fluid={true} className=\"content-body\">\r\n            <Row className=\"d-flex justify-content-center\">\r\n                <div className=\"col-12 col-lg-8  col-sm-12 col-md-8  p-2\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 >Create New</h4>\r\n                            <br />\r\n                            <input ref={(input) => nameRef = input} defaultValue={product?.product_name} placeholder=\"Product Name\" className=\"form-control animated fadeInUp\" type=\"text\" />\r\n                            <br />\r\n                            <input ref={(input) => priceRef = input} defaultValue={product?.price} placeholder=\"Price\" className=\"form-control animated fadeInUp\" type=\"text\" />\r\n                           \r\n                            <br />\r\n                            <input ref={(input) => categoryRef = input} defaultValue={product?.category_name} placeholder=\"Category Name\" className=\"form-control animated fadeInUp\" type=\"text\" />\r\n                            <br />\r\n                            <input ref={(input) => imgUrlRef = input} defaultValue={product?.image} placeholder=\"Image Url\" className=\"form-control animated fadeInUp\" type=\"text\" />\r\n                            <br />\r\n\r\n                            <button onClick={handleUpdateProduct} className=\"btn float-end btn-primary\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\nexport default Update;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["nameRef","priceRef","categoryRef","product_id","useParams","useState","product","setProduct","imgUrlRef","useRef","navigate","useNavigate","useEffect","productFindById","then","data","console","log","fluid","className","ref","input","defaultValue","product_name","placeholder","type","price","category_name","image","onClick","productName","value","category","imageUrl","IsEmpty","ErrorToast","updateProduct","res","Row","React","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}